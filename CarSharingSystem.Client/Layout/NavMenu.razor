@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">

        @if (!isLoggedIn)
        {
            <!-- 🔸 Niezalogowany -->
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/cars" Match="NavLinkMatch.All">
                    <span class="bi bi-car-front"></span> Samochody
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                    <span class="bi bi-person"></span> Logowanie
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/register" Match="NavLinkMatch.All">
                    <span class="bi bi-person-plus"></span> Rejestracja
                </NavLink>
            </div>
        }
        else if (isAdmin || isWorker)
        {
            <!-- 🔸 Admin / Worker -->
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/cars" Match="NavLinkMatch.All">
                    <span class="bi bi-car-front"></span> Samochody
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/admin/cars" Match="NavLinkMatch.All">
                    <span class="bi bi-wrench-adjustable-circle"></span> Zarządzanie flotą
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link text-danger" href="/logout" Match="NavLinkMatch.All">
                    <span class="bi bi-box-arrow-right"></span> Wyloguj
                </NavLink>
            </div>
        }
        else if (isUser)
        {
            <!-- 🔸 Zwykły użytkownik -->
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/cars" Match="NavLinkMatch.All">
                    <span class="bi bi-car-front"></span> Samochody
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/my" Match="NavLinkMatch.All">
                    <span class="bi bi-list-ul"></span> Moje rezerwacje
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/history" Match="NavLinkMatch.All">
                    <span class="bi bi-clock-history"></span> Historia
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link text-danger" href="/logout" Match="NavLinkMatch.All">
                    <span class="bi bi-box-arrow-right"></span> Wyloguj
                </NavLink>
            </div>
        }

    </nav>
</div>

@code {
    private bool isLoggedIn;
    private bool isAdmin;
    private bool isWorker;
    private bool isUser;
    private bool collapseNavMenu = true;
    private bool isAuthorized => isAdmin;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu() => collapseNavMenu = !collapseNavMenu;

    protected override async Task OnInitializedAsync()
    {
        await UpdateLoginStateAsync();

        AuthStateProvider.AuthenticationStateChanged += async _ =>
        {
            await UpdateLoginStateAsync();
            InvokeAsync(StateHasChanged);
        };
    }

    private async Task UpdateLoginStateAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isLoggedIn = user.Identity?.IsAuthenticated ?? false;
        isAdmin = user.IsInRole("Admin");
        isWorker = user.IsInRole("Worker");
        isUser = user.IsInRole("User");

        Console.WriteLine($"[NavMenu] isLoggedIn={isLoggedIn}, isAdmin={isAdmin}, isWorker={isWorker}, isUser={isUser}");
    }
}
